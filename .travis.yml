env:
  global:
    - DOCKER_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
    - DOCKER_BRANCH=${DOCKER_BRANCH//[\@\/]/-}
    - AUTOMATION_TEST_TAG=${AUTOMATION_TEST_TAG}
language: node_js
node_js:
  - '10'
services:
  - docker
before_install:
  - npm install -g npm@latest
install:
  - npm install
  - npm run prod
  - cd js-payments-testing
  - git pull --ff-only origin master
  - cd ..
jobs:
  include:
    - stage: 'Docker build'
      script:
        - docker pull "securetrading1/js-payments"
        - docker build . --tag "securetrading1/js-payments:$DOCKER_BRANCH"
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker push "securetrading1/js-payments"
        - docker build . --build-arg "CODE_VERSION=$DOCKER_BRANCH" --tag "securetrading1/js-payments-testing:$DOCKER_BRANCH"
        - docker push "securetrading1/js-payments-testing"
    - stage: 'Unit Test'
      name: 'Unit tests'
      script:
        - npm run coverage
        - npm run snyk
    - stage: 'Full Tests'
      if: env(AUTOMATION_TEST_TAG)=fullTest
    - name: "Behavioural test: chrome 74, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 73, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_73_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 74, Windows 8.1"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_w81_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 73, Windows 8"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_73_w8_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 74, Windows 7"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_w7_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 74, OS X Mojave"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_osxmoj_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 73, OS X Mojave"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_73_osxmoj_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 74, OS X High Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_osxhs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: chrome 74, OS X Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_chrome_74_osxs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 66, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_66_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 65, Windows 8.1"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_65_w81_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 66, Windows 7"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_66_w7_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 66, OS X Mojave"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_66_osxmoj_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 65, OS X High Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_65_osxhs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: firefox 66, OS X Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_firefox_66_osxs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: ie 11, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_ie_11_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: ie 10, Windows 8"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_ie_10_w8_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: edge 18, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_edge_18_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: edge 17, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_edge_17_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: safari 12.0, OS X Mojave"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_safari_12_0_osxmoj_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: safari 11.1, OS X High Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_safari_11_1_osxhs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: safari 10.1, OS X Sierra"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_safari_10_1_osxs_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy Note 9, Android 8.1"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyNote9_8_1_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy S9, Android 8.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyS9_8_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy S9 Plus, Android 9.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyS9Plus_9_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy S8, Android 7.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyS8_7_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy S7, Android 6.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyS7_6_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Samsung Galaxy Tab S3, Android 7.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_galaxyTabS3_7_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Pixel 3, Android 9.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Pixel3_9_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Pixel, Android 8.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Pixel_8_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Pixel, Android 7.1"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Pixel_7_1_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Nexus 6, Android 6.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Nexus6_6_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Nexus 9, Android 5.1"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Nexus9_5_1_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: Google Nexus 5, Android 4.4"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_Nexus5_4_4_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone XS, iOS 12.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhoneXS_12_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone XS Max, iOS 12.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhoneXS_Max_12_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone XR, iOS 12.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhoneXR_12_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone X, iOS 11.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhoneX_11_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone 8, iOS 11.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhone8_11_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone SE, iOS 11.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPhoneSE_11_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPad Pro 12.9 2018, iOS 12.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPadPro12_12_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPad Mini 4, iOS 11.0"
      if: env(AUTOMATION_TEST_TAG)=fullTest
      script:
        - npm run behave -- test_iPadMini4_11_0_$AUTOMATION_TEST_TAG
    - stage: 'Smoke Tests'
      if: env(AUTOMATION_TEST_TAG)=smokeTest
    - name: "Behavioural test: chrome 74, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=smokeTest
      script:
        - npm run behave -- test_chrome_74_w10_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: iPhone X, iOS 11.0"
      if: env(AUTOMATION_TEST_TAG)=smokeTest
      script:
        - npm run behave -- test_iPhoneX_11_0_$AUTOMATION_TEST_TAG
    - name: "Behavioural test: ie 11, Windows 10"
      if: env(AUTOMATION_TEST_TAG)=smokeTest
      script:
        - npm run behave -- test_ie_11_w10_$AUTOMATION_TEST_TAG
after_success:
  - cat ./coverage/lcov.info | coveralls
addons:
  browserstack:
    forcelocal: true
    username:
      secure: AH4sfHC+edBLzaGZo0UVn70c88/AKjFV7YGqQq6+8g96izDov25nB7rPaPuQHqnnARVoM7FSyc9XoHOA8Xm10oKxIBbtofw7Ydj+8czjNwa6k7nS0Rbpzl2JmhhgGXwFhXmvFXBxXiApXrhMYtE9Lo0rQGt9fXhWU7JkC2x04E3fPVAI+9oQ9V1SxIAZL+WSDyjPc1ZwQT8gwFM+XZaEy2J99LhNuFYQzeI6szmdtM0ZBLiqfeD2tixIXNUY+HAtTvUgZqwE9h+hon8Y/c574zzUf5ZxXzSaZbeU3+HW0rl75YaiP9lABOE4rrsY3rFd56IqXz5W46b63ZYAP8essu79Ph4xM9poJTpmU65domfCebMApdfgbIo7aSV7uOeNfKnrb5udbnqiZPGTuQSNJ+UJOjXJUfvNx/qBVFDsE7DqMChmZByRIUXVANaWDw70ixBij/vS5fpDiHpJ0gneizqosx09Vv10/cb9QDJ4FRDggQKZF3bS1V4q3vX1sodudTIuQVgfg95iR2uiQNnEdTPmvbM37FO6t8h8Vqxx4UqRIyf3jasVqsk79LU7F5/KYhvWW/KLN2lq65J2tKsTa/xBT856ah18cIGSMoie892tEsZxLbDy8KMUDyrbWNE4n11ButzifQISDziK7vQ7OwD3k6lJ24UFKBUoa/Oiim0=
    access_key:
      secure: TXgjJzYRpKcoBX6exipmXWj8TRToxGBQoQz0agRHczP9THyguyopST1XiPDdhcLIn7SMNDVORyP0D5EvMpchhvJ1unDpIULlNWjp63NsoYBGrryBXv307yn3NoQ+Tzh6U6GUG59bNfsqqLMOYapIqm6xxEqpcx1svA4Zjoz2rvcUK2gBof0UuL6s0rESB/4rQkwk0MQZDzm10O6wb6CWreFw/BMBTSKMvwVNfo5K+il+Ch1MWy2riWqYhyvGdu5Y/CG39WIUowa/y1HjcYNTwLlETr0nqqF9BnOjS05fabGIUnLBmf80mb6AEyrmNeVzQJlcJ4/lvI4f1RhrKvnDE70Ac6RFMoVcxOLLdSJIDoInFSH5xI5E/clGBYfP44LRDhRPXI4++8CPDp+MHG8trAOMIef3ySZGWoaHknNQ/G/Xhrsy7NLoBGnpz2c7CJoNjAPAIt2fm7y3Re+oo/hrhCh5/oya+kEKrrPI8qy9GpidCup5/QD/jKjkJijfusvC3ZEluaw+izAY+7RgLcaOifUqtVAx10JQIpZufWHJkHVqzmfGiLIWbyhNNJcrF+PcWIZSZelPb9uljO325M3bR7ViVmMPDuLojv0Z0cD/KWdqWW/uL7G7uzGSKgdTkuL7LqeaPOOQHZ07+v8Ii9GTZVee4+TRzucUISgNPvBVVJI=
  hosts:
    - webservices.securetrading.net
    - merchant.example.com
    - thirdparty.example.com
